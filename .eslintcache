[{"C:\\Users\\sally\\projects\\naturehood-app\\src\\index.js":"1","C:\\Users\\sally\\projects\\naturehood-app\\src\\reportWebVitals.js":"2","C:\\Users\\sally\\projects\\naturehood-app\\src\\Nav.js":"3","C:\\Users\\sally\\projects\\naturehood-app\\src\\App\\App.js":"4","C:\\Users\\sally\\projects\\naturehood-app\\src\\LandingPageNav\\LandingPageNav.js":"5","C:\\Users\\sally\\projects\\naturehood-app\\src\\LandingPage\\LandingPage.js":"6","C:\\Users\\sally\\projects\\naturehood-app\\src\\RegistrationForm\\RegistrationForm.js":"7","C:\\Users\\sally\\projects\\naturehood-app\\src\\Map\\Map.js":"8","C:\\Users\\sally\\projects\\naturehood-app\\src\\AddObservation\\AddObservation.js":"9","C:\\Users\\sally\\projects\\naturehood-app\\src\\EditObservation\\EditObservation.js":"10","C:\\Users\\sally\\projects\\naturehood-app\\src\\Observation\\Observation.js":"11","C:\\Users\\sally\\projects\\naturehood-app\\src\\config.js":"12","C:\\Users\\sally\\projects\\naturehood-app\\src\\ObservationList\\ObservationList.js":"13","C:\\Users\\sally\\projects\\naturehood-app\\src\\DemoNav\\DemoNav.js":"14","C:\\Users\\sally\\projects\\naturehood-app\\src\\MyNaturehood\\MyNaturehood.js":"15","C:\\Users\\sally\\projects\\naturehood-app\\src\\MainMap\\MainMap.js":"16"},{"size":988,"mtime":1609628626224,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":295,"mtime":1609367377463,"results":"20","hashOfConfig":"18"},{"size":1493,"mtime":1609627521058,"results":"21","hashOfConfig":"18"},{"size":294,"mtime":1609626941877,"results":"22","hashOfConfig":"18"},{"size":1555,"mtime":1609609630757,"results":"23","hashOfConfig":"18"},{"size":1050,"mtime":1609536693687,"results":"24","hashOfConfig":"18"},{"size":1484,"mtime":1609627921413,"results":"25","hashOfConfig":"18"},{"size":3169,"mtime":1609628060427,"results":"26","hashOfConfig":"18"},{"size":2018,"mtime":1609539856968,"results":"27","hashOfConfig":"18"},{"size":632,"mtime":1609542054934,"results":"28","hashOfConfig":"18"},{"size":75,"mtime":1609609145978,"results":"29","hashOfConfig":"18"},{"size":1678,"mtime":1609609990641,"results":"30","hashOfConfig":"18"},{"size":379,"mtime":1609627013819,"results":"31","hashOfConfig":"18"},{"size":990,"mtime":1609627637895,"results":"32","hashOfConfig":"18"},{"size":1633,"mtime":1609628555535,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19jukmb",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},"C:\\Users\\sally\\projects\\naturehood-app\\src\\index.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\reportWebVitals.js",[],["71","72"],"C:\\Users\\sally\\projects\\naturehood-app\\src\\Nav.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\App\\App.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\LandingPageNav\\LandingPageNav.js",[],["73","74"],"C:\\Users\\sally\\projects\\naturehood-app\\src\\LandingPage\\LandingPage.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\RegistrationForm\\RegistrationForm.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\Map\\Map.js",["75","76"],"import React, { useState } from \"react\";\r\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\r\nimport API_KEY from \"../config.js\";\r\n\r\nconst containerStyle = {\r\n  width: \"400px\",\r\n  height: \"400px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nconst center = {\r\n  lat: 45.6008,\r\n  lng: 122.7606,\r\n};\r\n\r\nfunction Map(props) {\r\n  const getCoordinates = (e) => {\r\n    console.log(\r\n      \"Marker dropped: Current Lat:\" +\r\n        e.latLng.lat().toFixed(3) +\r\n        \" Current Lng: \" +\r\n        e.latLng.lng().toFixed(3)\r\n    );\r\n    const lat = e.latLng.lat().toFixed(3);\r\n    console.log(lat);\r\n    const long = e.latLng.lng().toFixed(3);\r\n    console.log(long);\r\n    props.onMarkerDrop(lat, long);\r\n  };\r\n\r\n  const [map, setMap] = useState(null);\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={API_KEY}>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        <Marker\r\n          onLoad={onLoad}\r\n          position={center}\r\n          draggable={true}\r\n          onDragEnd={(e) => getCoordinates(e)}\r\n        />\r\n        <></>\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default React.memo(Map);\r\n","C:\\Users\\sally\\projects\\naturehood-app\\src\\AddObservation\\AddObservation.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\EditObservation\\EditObservation.js",["77"],"import React from \"react\";\r\nimport \"./EditObservation.css\";\r\n\r\nexport default function EditObservation(props) {\r\n  const observation = props.observations.find(\r\n    ({ id }) => id == props.match.params.observationId\r\n  );\r\n  console.log(observation);\r\n  return (\r\n    <div className=\"EditObservation\">\r\n      <h2>Edit Observation</h2>\r\n      <form>\r\n        <label htmlFor=\"species\">Species seen:</label>\r\n        <input type=\"text\" value={observation.species}></input>\r\n        <label htmlFor=\"type\">Type of species:</label>\r\n        <select id=\"type\" name=\"type\">\r\n          <option value={observation.type}>{observation.type}</option>\r\n          <option value=\"mammal\">Mammal</option>\r\n          <option value=\"bird\">Bird</option>\r\n          <option value=\"arthropod\">Arthropod</option>\r\n          <option value=\"amphibian\">Amphibian</option>\r\n          <option value=\"reptile\">Reptile</option>\r\n          <option value=\"fish\">Fish</option>\r\n        </select>\r\n        <label htmlFor=\"description\">\r\n          Description (be as detailed as possible!):\r\n        </label>\r\n        <textarea\r\n          id=\"description\"\r\n          name=\"description\"\r\n          className=\"AddObservation-textarea\"\r\n          value={observation.description}\r\n        ></textarea>\r\n        <label htmlFor=\"date\">Date seen:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"date\"\r\n          name=\"date\"\r\n          value={observation.date}\r\n        ></input>\r\n        <label htmlFor=\"date\">Time seen (approximate):</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"time\"\r\n          name=\"time\"\r\n          value={observation.time}\r\n        ></input>\r\n        <select id=\"ampm\">\r\n          <option value={observation.ampm}>{observation.ampm}</option>\r\n          <option>am</option>\r\n          <option>pm</option>\r\n        </select>\r\n        <button className=\"EditNote-button\" type=\"submit\">\r\n          Save\r\n        </button>\r\n        <button type=\"button\">Cancel</button>{\" \"}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sally\\projects\\naturehood-app\\src\\Observation\\Observation.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\config.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\ObservationList\\ObservationList.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\DemoNav\\DemoNav.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\MyNaturehood\\MyNaturehood.js",[],"C:\\Users\\sally\\projects\\naturehood-app\\src\\MainMap\\MainMap.js",["78"],"import React from \"react\";\r\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\r\nimport API_KEY from \"../config.js\";\r\n\r\nconst containerStyle = {\r\n  width: \"400px\",\r\n  height: \"400px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nconst center = {\r\n  lat: 45.6008,\r\n  lng: -122.7606,\r\n};\r\n\r\nfunction MainMap() {\r\n  const [map, setMap] = React.useState(null);\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={API_KEY}>\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={50}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        {/* Child components, such as markers, info windows, etc. */}\r\n        <></>\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default React.memo(MainMap);\r\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":31,"column":10,"nodeType":"87","messageId":"88","endLine":31,"endColumn":13},{"ruleId":"85","severity":1,"message":"89","line":34,"column":11,"nodeType":"87","messageId":"88","endLine":34,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":6,"column":20,"nodeType":"92","messageId":"93","endLine":6,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":17,"column":10,"nodeType":"87","messageId":"88","endLine":17,"endColumn":13},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","'bounds' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]